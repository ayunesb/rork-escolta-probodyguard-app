rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() && (
        resource.data.clientId == request.auth.uid ||
        resource.data.guardId == request.auth.uid ||
        isAdmin()
      );
      
      allow create: if isAuthenticated();
      
      allow update: if isAuthenticated() && (
        resource.data.clientId == request.auth.uid ||
        resource.data.guardId == request.auth.uid ||
        isAdmin()
      );
      
      allow delete: if isAdmin();
    }
    
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                      request.resource.data.senderId == request.auth.uid;
      allow update: if false;
      allow delete: if isAdmin();
    }
    
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && (
        resource.data.clientId == request.auth.uid ||
        resource.data.guardId == request.auth.uid ||
        isAdmin()
      );
      
      allow create: if isAuthenticated();
      allow update: if isAdmin();
      allow delete: if false;
    }
    
    match /documents/{documentId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
      
      allow create: if isAuthenticated() && 
                      request.resource.data.userId == request.auth.uid;
      
      allow update: if isAdmin();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    match /refunds/{refundId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if false;
    }
    
    match /companySettings/{settingsId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (
        resource.data.companyId == request.auth.uid ||
        isAdmin()
      );
    }
    
    match /guardReassignments/{reassignmentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.originalGuardId == request.auth.uid ||
        resource.data.newGuardId == request.auth.uid ||
        isAdmin()
      );
      allow delete: if isAdmin();
    }
  }
}
