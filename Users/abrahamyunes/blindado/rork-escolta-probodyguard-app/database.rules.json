{
  "rules": {
    ".read": false,
    ".write": false,
    "tracking": {
      "$bookingId": {
        ".read": "auth != null && (root.child('bookings').child($bookingId).child('clientId').val() == auth.uid || root.child('bookings').child($bookingId).child('guardId').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'admin')",
        ".write": "auth != null && root.child('bookings').child($bookingId).child('guardId').val() == auth.uid",
        ".validate": "newData.hasChildren(['latitude', 'longitude', 'timestamp'])",
        "latitude": {
          ".validate": "newData.isNumber() && newData.val() >= -90 && newData.val() <= 90"
        },
        "longitude": {
          ".validate": "newData.isNumber() && newData.val() >= -180 && newData.val() <= 180"
        },
        "timestamp": {
          ".validate": "newData.isNumber()"
        },
        "accuracy": {
          ".validate": "newData.isNumber()"
        },
        "heading": {
          ".validate": "newData.isNumber()"
        },
        "speed": {
          ".validate": "newData.isNumber()"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "chat": {
      "$bookingId": {
        ".read": "auth != null && (root.child('bookings').child($bookingId).child('clientId').val() == auth.uid || root.child('bookings').child($bookingId).child('guardId').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'admin')",
        "messages": {
          "$messageId": {
            ".write": "auth != null && (root.child('bookings').child($bookingId).child('clientId').val() == auth.uid || root.child('bookings').child($bookingId).child('guardId').val() == auth.uid)",
            ".validate": "newData.hasChildren(['senderId', 'text', 'timestamp']) && newData.child('senderId').val() == auth.uid",
            "senderId": {
              ".validate": "newData.isString() && newData.val() == auth.uid"
            },
            "text": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 5000"
            },
            "timestamp": {
              ".validate": "newData.isNumber()"
            },
            "originalText": {
              ".validate": "newData.isString()"
            },
            "originalLanguage": {
              ".validate": "newData.isString() && newData.val().matches(/^(en|es|fr|de)$/)"
            },
            "translated": {
              ".validate": "newData.isBoolean()"
            },
            "$other": {
              ".validate": false
            }
          }
        }
      }
    },
    "panic": {
      "$panicId": {
        ".read": "auth != null && (data.child('userId').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'admin')",
        ".write": "auth != null && (!data.exists() && newData.child('userId').val() == auth.uid)",
        ".validate": "newData.hasChildren(['userId', 'bookingId', 'timestamp', 'location'])",
        "userId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "bookingId": {
          ".validate": "newData.isString()"
        },
        "timestamp": {
          ".validate": "newData.isNumber()"
        },
        "location": {
          ".validate": "newData.hasChildren(['latitude', 'longitude'])",
          "latitude": {
            ".validate": "newData.isNumber() && newData.val() >= -90 && newData.val() <= 90"
          },
          "longitude": {
            ".validate": "newData.isNumber() && newData.val() >= -180 && newData.val() <= 180"
          }
        },
        "resolved": {
          ".validate": "newData.isBoolean()"
        },
        "resolvedBy": {
          ".validate": "newData.isString()"
        },
        "resolvedAt": {
          ".validate": "newData.isNumber()"
        },
        "notes": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": false
        }
      }
    }
  }
}
